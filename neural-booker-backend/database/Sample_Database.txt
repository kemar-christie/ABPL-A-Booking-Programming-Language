# Copyright (c) 2025 Kemar Christie, Roberto james, Dwayne Gibbs, Tyoni Davis, Danielle Jones
# All rights reserved. Unauthorised use, copying, or distribution is prohibited.
# Contact kemar.christie@yahoo.com, robertojames91@gmail.com, dwaynelgibbs@gmail.com, davistyo384@gmail.com & Jonesdanielle236@yahoo.com for licensing inquiries.
# Authors: Kemar Christie, Roberto James, Dwayne Gibbs, Tyoni Davis, Danielle Jones


CREATE TABLE Customer (
customer_id INT IDENTITY(1,1) PRIMARY KEY,
customer_username VARCHAR(20) NOT NULL,
first_name VARCHAR(100) NOT NULL,
last_name VARCHAR(100) NOT NULL,
email VARCHAR(255) UNIQUE NOT NULL,
phone_number VARCHAR(20) NOT NULL,
password_hash VARCHAR(255) NOT NULL,
date_of_birth DATE NOT NULL,
gender VARCHAR(10) CHECK (gender IN ('Male', 'Female')) NOT NULL
);

CREATE TABLE Events (
event_id INT IDENTITY(1,1) PRIMARY KEY,
event_name VARCHAR(255) NOT NULL,
event_type VARCHAR(50) CHECK (event_type IN ('Concert', 'Sports', 'Travel', 'Movie', 'Other')) NOT NULL,
description TEXT NULL,
event_date DATETIME NOT NULL,
location VARCHAR(255) NOT NULL,
available_tickets INT NOT NULL,
ticket_price DECIMAL(10,2) NOT NULL
);

CREATE TABLE TicketTypes (
ticket_type_id INT IDENTITY(1,1) PRIMARY KEY,
event_id INT NOT NULL,
ticket_name VARCHAR(100) NOT NULL,
ticket_price DECIMAL(10,2) NOT NULL,
FOREIGN KEY (event_id) REFERENCES Events(event_id) ON DELETE CASCADE
);

CREATE TABLE Reservations (
reservation_id INT IDENTITY(1,1) PRIMARY KEY,
customer_id INT NOT NULL,
event_id INT NOT NULL,
ticket_type_id INT NOT NULL,
reservation_date DATETIME DEFAULT GETDATE(),
ticket_count INT NOT NULL,
total_price DECIMAL(10,2) NOT NULL,
status VARCHAR(50) CHECK (status IN ('Reserved', 'Confirmed', 'Cancelled')) NOT NULL,
FOREIGN KEY (customer_id) REFERENCES Customer(customer_id) ON DELETE CASCADE,
FOREIGN KEY (event_id) REFERENCES Events(event_id) ON DELETE CASCADE,
FOREIGN KEY (ticket_type_id) REFERENCES TicketTypes(ticket_type_id) ON DELETE CASCADE
);

CREATE TABLE Payments (
payment_id INT IDENTITY(1,1) PRIMARY KEY,
reservation_id INT NOT NULL,
amount_paid DECIMAL(10,2) NOT NULL,
balance AS (total_price - amount_paid) PERSISTED,
payment_date DATETIME DEFAULT GETDATE(),
payment_method VARCHAR(50) CHECK (payment_method IN ('Credit Card', 'PayPal', 'Cash', 'Bank Transfer')) NOT NULL,
payment_status VARCHAR(50) CHECK (payment_status IN ('Completed', 'Pending', 'Partial')) NOT NULL,
FOREIGN KEY (reservation_id) REFERENCES Reservations(reservation_id) ON DELETE CASCADE
);

CREATE TABLE Cancellations (
cancellation_id INT IDENTITY(1,1) PRIMARY KEY,
reservation_id INT NOT NULL,
cancellation_date DATETIME DEFAULT GETDATE(),
reason TEXT NOT NULL,
FOREIGN KEY (reservation_id) REFERENCES Reservations(reservation_id) ON DELETE CASCADE
);